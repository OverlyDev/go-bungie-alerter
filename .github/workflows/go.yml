name: Build Shippables

on:
  pull_request:
    types:
      - closed
    branches:
      - master
  workflow_dispatch:

env:
  BINARY_NAME: "BungieAlerter"
  REPO_NAME: ghcr.io/overlydev/bungie-alerter

jobs:
  bump:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version_bump.outputs.new_tag }}
    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
        fetch-depth: 0
        
    - name: Bump version and push tag
      id: version_bump
      uses: anothrNick/github-tag-action@1.61.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: None
  
  binaries:
    runs-on: ubuntu-latest
    needs: bump
    outputs:
      tag_version: ${{ needs.bump.outputs.new_version }}
    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.20.2'
        
    - name: Generate embed files
      run: go generate
    
    - name: Build linux
      run: |
        env GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o bin/$BINARY_NAME-linux-amd64 .
        env GOOS=linux GOARCH=arm64 go build -ldflags "-s -w" -o bin/$BINARY_NAME-linux-arm64 .
    
    - name: Build windows
      run: env GOOS=windows GOARCH=amd64 go build -ldflags "-s -w" -o bin/$BINARY_NAME-windows-amd64.exe .
    
    - name: Publish release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "bin/*"
        omitBody: true
        makeLatest: true
        generateReleaseNotes: true
        commit: ${{ github.sha }}
        tag: ${{ needs.bump.outputs.new_version }}

  docker:
    runs-on: ubuntu-latest
    needs: binaries
    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
        fetch-depth: 0
    
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REPO_NAME }}
        tags: |
          type=raw,value=${{ needs.binaries.outputs.tag_version }}
          type-raw,value=latest

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Github Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
