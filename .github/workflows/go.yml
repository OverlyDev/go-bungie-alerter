name: Build Shippables

on:
  pull_request:
    types:
      - closed
    branches:
      - master
  workflow_dispatch:

env:
  BINARY_NAME: "BungieAlerter"
  REPO_TAG: ghcr.io/overlydev/bungie-alerter

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version_bump.outputs.new_tag}}
    if: github.event_name == 'pull_request'
    steps:
    
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
        fetch-depth: 0
        
    - name: Bump version and push tag
      id: version_bump
      uses: anothrNick/github-tag-action@1.61.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: None
  
  binaries:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        
    - name: Generate embed files
      run: go generate
    
    - name: Build linux
      run: |
        env GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o bin/$BINARY_NAME-linux-amd64 .
        env GOOS=linux GOARCH=arm64 go build -ldflags "-s -w" -o bin/$BINARY_NAME-linux-arm64 .
    
    - name: Build windows
      run: env GOOS=windows GOARCH=amd64 go build -ldflags "-s -w" -o bin/$BINARY_NAME-windows-amd64.exe .
    
    - name: Publish release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'pull_request'
      with:
        artifacts: "bin/*"
        omitBody: true
        makeLatest: true
        generateReleaseNotes: true
        commit: ${{ github.sha }}
        tag: ${{ needs.version.outputs.new_version }}
    
  docker:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
        fetch-depth: 0
    
    - name: Determine version
      id: docker_version
      env:
        BUMP_VERSION: ${{ needs.version.outputs.new_version }}
      run: if ! -z $BUMP_VERSION && $BUMP_VERSION != "";then echo $BUMP_VERSION >> $GITHUB_OUTPUT ; echo "testing" > $GITHUB_OUTPUT;fi

    - name: Login to Github Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Build Docker images
      env:
        VERSION_TAG: ${{ env.REPO_TAG }}:${{ steps.docker_version.outputs.* }}
        LATEST_TAG: ${{ env.REPO_TAG }}:latest
      run: |
        mkdir -p _context
        cp *.go _context/.
        cp go.mod _context/.
        cp go.sum _context/.
        cp *.sh _context/.
        cp Dockerfile _context/.
        cd _context
        docker buildx create --use
        docker buildx build --push --platform=linux/amd64,linux/arm64 -t ${{ env.VERSION_TAG }} -t ${{ env.LATEST_TAG }} -f Dockerfile .
        
  
